public class LinkedListQueue <T> {
    private class Node<T> {
        private T data;
        Node<T> next;

        private Node() {
            data = null;
            next = null;
        }
    }
    private int size;
    private Node<T> front , rear;

    public LinkedListQueue() {
        size = 0;
        front = rear = null;
    }

    public LinkedListQueue(int size){

    }

    public boolean isEmpty(){
        return (front == null) && (rear == null);
    }

    public void Enqueue(T data){
        Node<T> newNode = new Node();
        newNode.data = data;
        if(isEmpty()){
            front = rear = newNode;
            size++;
            return;
        }
        rear.next = newNode;
        rear = newNode;
        size++;
    }

}